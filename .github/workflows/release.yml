name: Release and Publish
on:
  push:
    branches:
      - release
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build package
        run: npm run build
      
      - name: Run tests
        run: npm test

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    permissions:
      contents: write
      id-token: write # For provenance
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build package
        run: npm run build
      
      - name: Run tests
        run: npm test
      
      - name: Check if version already published
        id: check-version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm view airport-data-js version 2>/dev/null || echo "0.0.0")
          echo "package-version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "npm-version=$NPM_VERSION" >> $GITHUB_OUTPUT
          if [ "$PACKAGE_VERSION" != "$NPM_VERSION" ]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
          else
            echo "should-publish=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Publish to NPM
        if: steps.check-version.outputs.should-publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        if: steps.check-version.outputs.should-publish == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check-version.outputs.package-version }}
          release_name: Release v${{ steps.check-version.outputs.package-version }}
          body: |
            ## What's New in v${{ steps.check-version.outputs.package-version }}

            ### ðŸ†• New Features
            - Enhanced airport data with external links
            - Timezone-based airport lookup
            - Advanced multi-criteria filtering
            - Autocomplete suggestions functionality
            - External links to Wikipedia, websites, and flight tracking services

            ### ðŸ”„ Improvements
            - Better error handling and validation
            - More comprehensive airport data structure
            - Improved type filtering with partial matching
            - Enhanced geographic calculations

            ### ðŸ“¦ Installation
            ```bash
            npm install airport-data-js@${{ steps.check-version.outputs.package-version }}
            ```

            See [README.md](https://github.com/${{ github.repository }}/blob/main/README.md) for full documentation.
          draft: false
          prerelease: false
      
      - name: Skip publish (version unchanged)
        if: steps.check-version.outputs.should-publish == 'false'
        run: |
          echo "Version ${{ steps.check-version.outputs.package-version }} is already published on NPM"
          echo "Skipping publish step"